datadog:
  apiKey: <DATADOG_API_KEY>
  appKey: <DATADOG_APP_KEY>
  ## The name must be unique and must be dot-separated tokens with the following restrictions:
  ## * Lowercase letters, numbers, and hyphens only.
  ## * Must start with a letter.
  ## * Must end with a number or a letter.
  ## * Overall length should not be higher than 80 characters.
  ## Compared to the rules of GKE, dots are allowed whereas they are not allowed on GKE:
  ## https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.FIELDS.name  
  clusterName: <CLUSTER_NAME>
  clusterChecks:
    enabled: true  
  registry: gcr.io/datadoghq
  tags: []
  site: datadoghq.com
  apm:
    portEnabled: true
    port: 8126
    socketEnabled: false
  kubelet:
    tlsVerify: false
  processAgent:
    enabled: true
    processCollection: true
  containerImageCollection:
    enabled: true
  dogstatsd:
    originDetection: true
    useSocketVolume: false
    useHostPort: true
  confd: {}
  #   redisdb.yaml: |-
  #     init_config:
  #     instances:
  #       - host: "name"
  #         port: "6379"
  #   kong.yaml: |-
  #     init_config:
  #     instances:
  #       - openmetrics_endpoint: <KONG_INSTANCE_URL>:8001/metrics
agents:
  # image:
  #   tagSuffix: jmx
  podSecurity:
    securityContextConstraints:
      create: true
clusterAgent:
  podSecurity:
    securityContextConstraints:
      # clusterAgent.podSecurity.securityContextConstraints.create -- If true, create a SCC resource for Cluster Agent pods
      create: true
  admissionController:
    configMode: "hostip"
  confd: {}
  #   mysql.yaml: |-
  #     cluster_check: true
  #     instances:
  #       - host: <EXTERNAL_IP>
  #         port: 3306
  #         username: datadog
  #         password: <YOUR_CHOSEN_PASSWORD>
clusterChecksRunner:
  # clusterChecksRunner.enabled -- If true, deploys agent dedicated for running the Cluster Checks instead of running in the Daemonset's agents.

  ## If both clusterChecksRunner.enabled and datadog.kubeStateMetricsCore.enabled are true, consider enabling datadog.kubeStateMetricsCore.useClusterCheckRunners as well.
  ## If datadog.kubeStateMetricsCore.useClusterCheckRunners is enabled, it's recommended to enable this flag as well so all Cluster Checks run on Cluster Checks Runners instead of node agents.
  ## ref: https://docs.datadoghq.com/agent/autodiscovery/clusterchecks/
  enabled: true

  ## Define the Datadog image to work with.
  image:
    # clusterChecksRunner.image.name -- Datadog Agent image name to use (relative to `registry`)
    name: agent
    # clusterChecksRunner.image.tag -- Define the Agent version to use
    tag: 7.55.1
    # clusterChecksRunner.image.digest -- Define Agent image digest to use, takes precedence over tag if specified
    digest: ""
    # clusterChecksRunner.image.tagSuffix -- Suffix to append to Agent tag
    tagSuffix: jmx
remoteConfiguration:
  enabled: true
